# This is a basic workflow to help you get started with Actions

name: Refresh Boeien files

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
#  push:
#    branches: [ "main" ]
  schedule:
    - cron: '0 12 * * *' # runs daily refresh at 12:00 UTC everyday

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  refreshB:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9 #install the python needed
      - name: install python packages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: install gdal
        run: |
         sudo apt-add-repository -y ppa:ubuntugis/ubuntugis-unstable
         sudo apt-get update
         sudo apt-get install -y gdal-bin libgdal-dev
         pip install GDAL==3.4.3
#         pip install GDAL==3.2.3


#      - name: install gdal
#        run: |
#         sudo apt-get update
#         sudo apt-get install -y gdal-bin libgdal-dev
#         apt-get install -y python3-gdal
#         pip install osgeo
#         pip install gdal
#         pip install GDAL



#         sudo apt-get install gdal-bin libgdal-dev
#         pip install osgeo
#         pip install gdal
#         pip install GDAL





#      - name: install gdal
#        run: |
#         sudo apt-add-repository ppa:ubuntugis/ubuntugis-unstable
#         sudo apt-get update
#         sudo apt-get install gdal-bin libgdal-dev
#         pip install GDAL==3.2.3
#         pip install GDAL


      - name: execute py script # run the run.py to get the latest data
        run: |
              python boeien_generator.py
        env:
          key: ${{ secrets.key }} # if run.py requires passwords..etc, set it as secrets

      - name: install additional python packages for chartcatalog.py 
        run: |
          pip install -r requirements-catalog.txt

      - name: execute py script # run the run.py to get the latest data
        run: |
          python chartcatalog.py

      - name: Commit changes
        uses: EndBug/add-and-commit@v7
        with:
          message: "Automatic github data refresh"
